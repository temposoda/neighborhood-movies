name: "\U0001F680 Deploy"
'on':
  push:
    branches:
      - main
      - dev
  pull_request: null
concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true
permissions:
  actions: write
  contents: read
jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20
      - name: "\U0001F4E5 Install dependencies"
        run: npm install
      - name: "\U0001F52C Lint"
        run: npm run lint
  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20
      - name: "\U0001F4E5 Install deps"
        run: npm install
      - name: "\U0001F50E Type check"
        run: npm run typecheck
  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20
      - name: "\U0001F4E5 Install deps"
        run: npm install
      - name: ⚡ Run vitest
        run: npm test -- --coverage
  playwright:
    name: ⚫️ End-to-end tests
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: "\U0001F4E5 Install deps"
        run: npm install

      - name: "\U0001F433 Docker compose"
        run: docker-compose up -d && sleep 3

      - name: "\U0001F6E0 Setup Database"
        run: npx dotenv-cli -e ./.env.test npx prisma migrate reset -- --force

      - name: ⚙️ Build
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  deploy:
    name: "\U0001F680 Deploy"
    runs-on: ubuntu-latest
    needs:
      - lint
      - typecheck
      - vitest
      - playwright
    if: >-
      ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') &&
      github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
      - name: "\U0001F440 Read app name"
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app
      - name: "\U0001F680 Deploy Staging"
        if: '${{ github.ref == ''refs/heads/dev'' }}'
        uses: superfly/flyctl-actions@1.4
        with:
          args: >-
            deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app
            ${{ steps.app_name.outputs.value }}-staging --strategy immediate
        env:
          FLY_API_TOKEN: '${{ secrets.FLY_API_TOKEN }}'
      - name: "\U0001F680 Deploy Production"
        if: '${{ github.ref == ''refs/heads/main'' }}'
        uses: superfly/flyctl-actions@1.4
        with:
          args: >-
            deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app
            ${{ steps.app_name.outputs.value }} --strategy immediate
        env:
          FLY_API_TOKEN: '${{ secrets.FLY_API_TOKEN }}'
