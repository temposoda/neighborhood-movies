name: "ðŸš€ Deploy"
on:
  push:
    branches:
      - main

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true
permissions:
  actions: write
  contents: read

jobs:
  test:
    name: "Tests"
    uses: temposoda/neighborhood-movies/.github/workflows/test.yml@main

  deploy-staging:
    name: "Deploy/Staging"
    runs-on: ubuntu-latest
    needs:
      - test
    environment:
      name: staging
      url: 'https://www.neighborhood-movies-staging.fly.dev'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20
      - uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: fly.toml
          field: app
      - uses: superfly/flyctl-actions/setup-flyctl@v1.4
        with:
          version: 0.1.58
      - run: npm install
      - run: npx playwright install --with-deps chromium

      - run: flyctl apps list
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - run: flyctl releases
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging --strategy immediate
        env:
          FLY_API_TOKEN: '${{ secrets.FLY_API_TOKEN }}'

      - run: npx playwright test
        id: integration-tests
        env:
          FRONTEND_HOST_NAME: ${{ vars.FRONTEND_HOST_NAME }}
          FRONTEND_PROTOCOL: ${{ vars.FRONTEND_PROTOCOL }}
          TEST_USERNAME: ${{ vars.TEST_USERNAME }}
          TEST_USER_PASSWORD: ${{ vars.TEST_USER_PASSWORD }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # https://community.fly.io/t/how-to-ideas-rollbacks/12517
      - run: flyctl deploy --strategy immediate -i `flyctl releases -j | jq ".[1].ImageRef" -r`
        if: steps.integration-tests.outcome != 'success'
        env:
          FLY_API_TOKEN: '${{ secrets.FLY_API_TOKEN }}'
